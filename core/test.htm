<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Selection Tool</title>
    <!-- Bootstrap -->
    <link href="../css/bootstrap.min.css" rel="stylesheet" media="screen" />
    <link
      href="../css/bootstrap-theme.min.css"
      rel="stylesheet"
      media="screen"
    />
    <link
      href="../css/nchrp1441.css?v=20160525"
      rel="stylesheet"
      media="screen,print"
    />
    <link
      href="../css/nchrp1441-facility.css?v=20160525"
      rel="stylesheet"
      media="screen,print"
    />
    <link
      rel="stylesheet"
      href="https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css"
    />

    <link
      href="https://fonts.googleapis.com/css?family=Open+Sans"
      rel="stylesheet"
      type="text/css"
      media="print"
    />
    <script
      type="text/javascript"
      src="https://cdn.rawgit.com/niklasvh/html2canvas/0.5.0-alpha2/dist/html2canvas.min.js"
    ></script>

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->

    <link href="../css/report.css?v=20160525" rel="stylesheet" media="print" />

    <style>
      label {
        color: black !important;
      }
      .list-group-item:first-child {
        background-color: #ccc;
      }
      .indent-level-1 {
        padding-left: 20px;
        background-color: #eee;
      }
      .indent-level-2 {
        padding-left: 40px;
      }
      .removable-filter {
        margin-right: 5px;
        cursor: pointer;
      }
      .removable-filter i {
        margin-left: 5px;
      }
      #clearFilters {
        margin-top: 10px;
      }
      .icon-indicator {
        font-size: 30px;
        line-height: 24px;
      }
      .group-title {
        font-size: 22px;
      }
      .accordion-toggle:focus {
        text-decoration: none;
        outline: none;
      }
      .nav-tabs {
        margin-bottom: 15px;
      }
    </style>
  </head>

  <body class="facility">
    <header
      class="navbar navbar-static-top navbar-inverse"
      id="top"
      role="banner"
    >
      <div class="container v2">
        <div class="navbar-header">
          <button
            class="navbar-toggle collapsed"
            type="button"
            data-toggle="collapse"
            data-target=".bs-navbar-collapse"
          >
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a href="../index.htm" class="navbar-brand">NCHRP 17-113</a>
        </div>
        <nav class="collapse navbar-collapse bs-navbar-collapse">
          <ul class="nav navbar-nav">
            <li>
              <a href="../index.htm">Home</a>
            </li>
            <li class="active">
              <a href="facility.htm">Searchable Database 1</a>
            </li>
            <li class="active">
              <a href="st02.htm">Searchable Database 2</a>
            </li>
            <li>
              <a href="methods.htm">SSA500 Tool</a>
            </li>
          </ul>
        </nav>
      </div>
      <!-- end .container -->
    </header>

    <!-- ************************************************************************************************* -->

    <div class="container">
      <div class="row">
        <div class="col-md-4">
          <h3>Selection Tool</h3>
          <!-- Custom Search Bar -->
          <div class="input-group">
            <input
              type="text"
              class="form-control"
              id="customKeyword"
              placeholder="Custom Keyword"
            />
            <span class="input-group-btn">
              <button
                class="btn btn-default"
                type="button"
                id="customSearchBtn"
              >
                GO
              </button>
            </span>
          </div>

          <!-- Display Selected Filters -->
          <div id="selectedFilters">
            <h4>Filtered by:</h4>
            <div id="filterList"></div>
            <button class="btn btn-default" id="clearFilters">Clear</button>
          </div>

          <!-- Sidebar Section -->
          <div id="sidebar" class="list-group" style="margin-top: 20px">
            <!-- Categories and subcategories with count will be dynamically loaded here -->
          </div>
        </div>
        <div class="col-md-8">
          <div class="container">
            <h2>Groups and Items Accordion</h2>
            <div class="panel-group" id="groupAccordion">
              <!-- The groups and items will be dynamically loaded here -->
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="js/bootstrap.min.js"></script>

    <script>
      $(document).ready(function () {
        var selectedFilters = [];

        // Load the items from the JSON file (simulated here with dummy data)
        $.getJSON("./data/items.json", function (items) {
          var categoryCount = {};
          var groups = {};

          // Count categories and group items
          items.forEach(function (item) {
            // Count categories
            item.categories.forEach(function (category) {
              if (!categoryCount[category]) {
                categoryCount[category] = 0;
              }
              categoryCount[category]++;
            });

            // Group items by group name
            if (!groups[item.group]) {
              groups[item.group] = [];
            }
            groups[item.group].push(item);
          });

          // Render the sidebar with categories and counts
          var sidebar = $("#sidebar");
          Object.keys(categoryCount).forEach(function (category) {
            sidebar.append(
              '<div class="list-group-item"><strong>' +
                category +
                ' (' +
                categoryCount[category] +
                ')</strong></div>'
            );
          });

          // Render the group accordion
          var accordion = $("#groupAccordion");
          Object.keys(groups).forEach(function (group, index) {
            var groupHTML = `
              <div class="panel panel-default">
                <div class="panel-heading" style="background-image: none;background: #0071bc;color: white;">
                  <h4 class="panel-title group-title">
                    <a
                      data-toggle="collapse"
                      href="#groupCollapse${index}"
                      class="accordion-toggle"
                    >
                      ${group}
                      <span class="pull-right icon-indicator">+</span>
                    </a>
                  </h4>
                </div>
                <div id="groupCollapse${index}" class="panel-collapse collapse">
                  <div class="panel-body">
                    <div class="panel-group" id="itemAccordion${index}">
                      ${groups[group]
                        .map(
                          (item, itemIndex) => `
                          <div class="panel panel-default">
                            <div class="panel-heading">
                              <h4 class="panel-title">
                                <a
                                  data-toggle="collapse"
                                  href="#itemCollapse${index}-${itemIndex}"
                                >
                                  ${item.title}
                                  <span class="pull-right icon-indicator">+</span>
                                </a>
                              </h4>
                            </div>
                            <div id="itemCollapse${index}-${itemIndex}" class="panel-collapse collapse">
                              <div class="panel-body">
                                <ul class="nav nav-tabs">
                                  <li class="active"><a data-toggle="tab" href="#desc${index}-${itemIndex}">Description</a></li>
                                  <li><a data-toggle="tab" href="#practices${index}-${itemIndex}">Notable Practices</a></li>
                                  <li><a data-toggle="tab" href="#adv${index}-${itemIndex}">Advantages</a></li>
                                  <li><a data-toggle="tab" href="#drawbacks${index}-${itemIndex}">Drawbacks</a></li>
                                  <li><a data-toggle="tab" href="#img${index}-${itemIndex}">Images</a></li>
                                  <li><a data-toggle="tab" href="#ref${index}-${itemIndex}">References</a></li>
                                  <li><a data-toggle="tab" href="#measures${index}-${itemIndex}">Related Measures</a></li>
                                </ul>

                                <div class="tab-content">
                                  <div id="desc${index}-${itemIndex}" class="tab-pane fade in active">
                                    <p>${item.description}</p>
                                  </div>
                                  <div id="practices${index}-${itemIndex}" class="tab-pane fade">
                                    <p>${item.notable_practices.join(", ")}</p>
                                  </div>
                                  <div id="adv${index}-${itemIndex}" class="tab-pane fade">
                                    <p>${item.advantages.join(", ")}</p>
                                  </div>
                                  <div id="drawbacks${index}-${itemIndex}" class="tab-pane fade">
                                    <p>${item.drawbacks.join(", ")}</p>
                                  </div>
                                  <div id="img${index}-${itemIndex}" class="tab-pane fade">
                                    ${item.images
                                      .map(
                                        (img) =>
                                          `<img src="${img}" alt="Item Image" style="max-width:100%"/>`
                                      )
                                      .join("")}
                                  </div>
                                  <div id="ref${index}-${itemIndex}" class="tab-pane fade">
                                    <p>${item.references.join(", ")}</p>
                                  </div>
                                  <div id="measures${index}-${itemIndex}" class="tab-pane fade">
                                    ${item.related_measures
                                      .map(
                                        (measure) =>
                                          `<a href="${measure.link}" target="_blank">${measure.title}</a>`
                                      )
                                      .join(", ")}
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>`
                        )
                        .join("")}
                    </div>
                  </div>
                </div>
              </div>
            `;
            accordion.append(groupHTML);
          });

          // Event listeners to toggle + and - icons
          $("#groupAccordion").on("show.bs.collapse", function (e) {
            $(e.target)
              .prev(".panel-heading")
              .find(".icon-indicator")
              .text("-");
          });

          $("#groupAccordion").on("hide.bs.collapse", function (e) {
            $(e.target)
              .prev(".panel-heading")
              .find(".icon-indicator")
              .text("+");
          });
        });

        // When a checkbox or label is clicked, update the selected filters
        $(document).on(
          "click",
          ".filter-checkbox, .selectable-label",
          function (e) {
            var checkbox = $(this)
              .closest(".list-group-item")
              .find(".filter-checkbox");
            var label = checkbox.attr("data-label");

            // Toggle checkbox state
            checkbox.prop("checked", !checkbox.prop("checked"));

            // Update selected filters
            if (checkbox.prop("checked")) {
              if (!selectedFilters.includes(label)) {
                selectedFilters.push(label);
              }
            } else {
              selectedFilters = selectedFilters.filter(function (item) {
                return item !== label;
              });
            }

            // Refresh filter list
            updateFilterList();
          }
        );

        // Function to update selected filters display
        function updateFilterList() {
          var filterList = $("#filterList");
          filterList.empty(); // Clear previous list

          if (selectedFilters.length > 0) {
            selectedFilters.forEach(function (filter) {
              filterList.append(
                '<span class="label label-default removable-filter" data-label="' +
                  filter +
                  '">' +
                  filter +
                  ' <i class="fa fa-times"></i></span> '
              );
            });
          } else {
            filterList.html("<span>No filters selected</span>");
          }
        }

        // Remove filter when clicked in the "Filtered by" section
        $(document).on("click", ".removable-filter", function () {
          var filter = $(this).attr("data-label");
          selectedFilters = selectedFilters.filter(function (item) {
            return item !== filter;
          });

          // Uncheck corresponding checkbox
          $('.filter-checkbox[data-label="' + filter + '"]').prop(
            "checked",
            false
          );

          // Refresh filter list
          updateFilterList();
        });

        // Clear all filters
        $("#clearFilters").click(function () {
          selectedFilters = [];
          $(".filter-checkbox").prop("checked", false); // Uncheck all checkboxes
          updateFilterList();
        });

        // Custom search functionality (For demonstration purposes, this will just log the search term)
        $("#customSearchBtn").click(function () {
          var keyword = $("#customKeyword").val();
          console.log("Custom search keyword:", keyword);
          // Add your search logic here
        });
      });
    </script>
  </body>
</html>
